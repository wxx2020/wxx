---
title: 初识R语言
author: Wang Xiaoxi
date: '2022-06-06'
slug: [R-introduction]
categories:
  - R
tags:
  - R
description: ~
featured_image: https://wxx-images.oss-cn-hangzhou.aliyuncs.com/r-ocean.jpg
---

为了方便学习，本文在讲解过程中会穿插补充一些内容，包括对文中内容的解释或扩展、提示读者注意、补充的作业任务和使用小技巧等。这些内容将会采用注释的形式出现，本书采用不同的[emoji](https://www.webfx.com/tools/emoji-cheat-sheet/)符号开头从而对注释内容加以分辨：

- :pushpin:表示对相关内容的进一步解释或扩展，通常针对的是出现在上一段的内容；
- :loudspeaker: 表示注释内容需要读者注意，通常是新手在初次使用时经常出现的错误；
- :pencil:表示需要读者亲自尝试完成的补充作业，以加深读者对相关内容的理解；
- :key:表示在使用R语言时的一些小技巧，掌握这些小技巧通常能够提高工作效率。

------

## 1 初识R语言

### 1.1 R语言的性质、功能和特征

R语言是什么？这或许是许多新手在第一次接触R语言最想搞清楚的问题。根据[R语言官网](https://www.r-project.org/)的介绍：`R is a free software environment for statistical computing and graphics`，也就是说，R是用于统计计算和制图的自由软件环境。这个介绍虽然简短，但同时点明了R语言的性质、功能和特征。

R语言的性质是一种[解释型编程语言](https://baike.baidu.com/item/%E8%A7%A3%E9%87%8A%E5%9E%8B%E8%AF%AD%E8%A8%80/8888952?fr=aladdin)环境，在使用时主要依靠编写代码或脚本来执行命令从而获取相应的结果。“环境”则意味着R语言是一个完善且统一的系统，它不仅可以提供一些集成的统计工具，更大量地提供各种统计计算的函数，从而使得用户能够灵活地进行数据分析，甚至创造出符合需要得新的统计计算方法（王斌会，[2017](https://book.douban.com/subject/27106145/)）。

R语言的主要功能在于统计计算和制图，作为统计分析工具，R语言几乎覆盖了整个统计领域的前沿算法，经典的回归分析和火爆的神经网络都可以通过直接调用函数来实现，在制图方面，R语言能够以一种简单而直接的方式创建优雅、 信息丰富、高度定制化的图形（见[图1](#1-plots)）(朱雪宁 等，[2018](https://book.douban.com/subject/30395816/)；Robert Kabacoff，[2016](https://book.douban.com/subject/26785199/))。除上述主要功能之外，丰富的R包使得R语言在数据管理、大数据分析、程序开发等方面也有不俗的表现。

R语言最显著的特征是自由，这得益于它的免费、开源和易扩展性，相比于传统的商业统计软件，R语言可以免费下载任何有关的安装程序、源代码、程序包及其源代码、文档资料，其源代码托管在[Github](https://github.com/SurajGupta/r-source)，任何用户都可以直接接触到。R语言包含大量的扩展包并且拥有方便的二次开发功能，与其他各种语言（例如[Python](https://baike.baidu.com/item/Python/407313?fr=aladdin)，[C](https://baike.baidu.com/item/c%E8%AF%AD%E8%A8%80/105958?fr=aladdin)）都可以无缝对接。这些特点使得R语言受到了统计专业人士的青睐，成为当前应用最为广泛的数据统计分析软件之一。

<center>
    <figure>
    <img src="https://wxx-images.oss-cn-hangzhou.aliyuncs.com/picbed-master/unnamed-chunk-1-1.png" width="373"/>
    <img src="https://wxx-images.oss-cn-hangzhou.aliyuncs.com/picbed-master/299-circular-stacked-barplotBig.png", width="373"/>
    <img src="https://wxx-images.oss-cn-hangzhou.aliyuncs.com/picbed-master/Surfer_travel.png", width="750"/>
    </figure>
    <span id="1-plots">图1：R语言制图示例（来源：https://www.r-graph-gallery.com/index.html）</span>
</center>


### 1.2 R语言的发展历史

R语言起源于另一门语言——[S语言](https://www.whoishostingthis.com/resources/s-plus/)，是S语言的一个变种。S语言是由AT&T[贝尔实验室](https://baike.baidu.com/item/贝尔实验室)的John Chambers等人于1976年开发的一种用来进行数据探索、统计分析、作图的[解释型语言](https://baike.baidu.com/item/解释型语言)。[^1]它目前有两种实现版本：一种是由TIBCO经营的商业软件S-plus；另一种就是免费开源的R语言。

1992年，Auckland大学的[Ross Ihaka](https://www.stat.auckland.ac.nz/~ihaka/)和[Robert Gentleman](https://www.computerhope.com/people/robert_gentleman.htm)（见[图2](#1-creator)）为了能够更有效地开展大学统计入门课程的教学，决定引入S语言来开发一套软件。由于他们两个人的名字都是以字母R开头的，所以他们将这款软件称为R语言。1994年R语言的雏形基本形成，在同行的鼓励下，他们决定采用自由软件基金会的通用公共许可证（GPL）将R语言作为一款自由软件发布。1997年，Kurt Hornik和Fritz Leisch在维也纳建立了[R综合档案网络](https://cran.r-project.org/)（Comprehensive R Archive Network，简称CRAN）作为用户贡献的存储库。2000年2月29日，基本功能齐全且足够稳定的R语言1.0版本正式发布。[^2]此后，越来越多的用户提供了各式各样的R扩展包，使得R语言的功能日益丰富且强大。截至2021年4月12日，CRAN上发布的扩展包已经达到17422个，且近年来呈现出递增的趋势（见[图3](#1-pkgnumber)）。

<center>
    <figure>
    <img src="https://wxx-images.oss-cn-hangzhou.aliyuncs.com/picbed-master/ross-ihaka.jpg" width="150"/>
    <img src="https://wxx-images.oss-cn-hangzhou.aliyuncs.com/picbed-master/robert-gentleman.jpg", width="150"/>
    </figure>
    <span id="1-creator">图2：R语言创始人Ross Ihaka（左）和Robert Gentleman（右）</span>
</center>
<center>
    <figure>
    <img src="https://wxx-images.oss-cn-hangzhou.aliyuncs.com/picbed-master/plot.png", width="750"/>
    </figure>
    <span id="1-pkgnumber">图3：2006-2020历年CRAN上发布的R包数量</span>
</center>



> :pushpin:除R 语言之外，C语言也是贝尔实验室的一项重要研究成果，但两者有不同的侧重领域，R 语言是一种解释型的面向数学理论研究工作者的语言，而 C 语言是为计算机软件工程师设计的。如果你是一个计算机程序的初学者并且急切地想了解计算机的通用编程，R 语言不是一个很理想的选择，可以选择 Python、C 或 Java。
>
> R 语言是解释运行的语言（与 C 语言的编译运行不同），它的执行速度比 C 语言慢得多，不利于优化。但它在语法层面提供了更加丰富的数据结构操作并且能够十分方便地输出文字和图形信息，所以它广泛应用于数学尤其是统计学领域。[^3]

[^1]: 关于S语言的更多内容请查看：https://baike.baidu.com/item/S%E8%AF%AD%E8%A8%80/2440117?fr=aladdin 。

[^2]: 关于R语言发展历史的更多内容请查看：https://www.stat.auckland.ac.nz/~ihaka/downloads/Massey.pdf和https://cran.r-project.org/doc/html/interface98-paper/paper_2.html 。
[^3]: 参考资料来源：https://www.runoob.com/r/r-tutorial.html 。

### 1.3 R语言的优势与缺点

R语言是由数据处理、统计计算和图形绘制等一系列工具组成的集成软件，它的功能特点主要体现在：

1. 有效的数据处理和保存机制；
2. 拥有一整套数组和矩阵的操作运算符；
3. 拥有一系列大型、连贯且完整的数据分析中间工具；
4. 可以直接对数据进行分析和展示的图形设备；
5. 是一种发展完善、简洁高效的程序设计语言，包括了条件语句、循环语句、用户自定义的递归函数以及输入输出接口。[^4]

除了R语言之外，我们还经常见到[Stata](https://www.stata.com/)、[SAS](https://www.sas.com/)、[SPSS](https://www.ibm.com/analytics/spss-statistics-software)、[Matlab](https://www.mathworks.com/products/matlab.html)等同类软件，为什么不选择这些软件而选择R语言呢？这是因为R语言有着非常多的值得尝试的优势：

1. 免费、开源、跨平台。与常见的商业软件相比，R语言不需要昂贵的价钱购买或维护，可以直接免费下载和使用，对于教师和学生来说，这种好处是显而易见的。R语言的开源性使得它具有强大的发展潜力，自从它被开发出来至今，讨论开发R的综合网站和R的附加模板一直层出不穷，大大方便了各类研究人员。此外，R语言可以在各种操作系统上使用，无论是常用的Windows、MacOS还是少见的Linux，甚至可以通过在服务器上搭建 RStudio Server来实现不同终端的跨平台登陆使用。
2. 小巧轻便、运行速度快。与动辄几个GB的Matlab和SAS等统计软件相比，R语言更加小巧轻便，最新的R4.0.5的安装包近有84.4MB，可以在1-2秒内启动并投入使用（当然，这与你的电脑配置也有关系）。R语言更新速度相对较快，可以抢先囊括其他软件中尚不可用的、先进的统计计算例程，有些新方法的更新速度是以周来计算的。尽管小巧，但R语言的运行速度却丝毫不逊色于其他软件，github上有个项目（[benchmark-stata-r](https://github.com/matthieugomez/benchmark-stata-r)）专门比较了在同一台电脑的Stata和R中进行相同数据操作程序所花费的时间，结果表明R语言整体上要优于Stata。
3. 强大的数据处理、统计分析和图形绘制功能。截至目前，R用户社区已提供了超过1.7万的功能扩展包，涵盖了小样本概率估计、时间序列、贝叶斯分析、复杂抽样数据统计、神经网络、空间地理分析、网络爬虫、非结构化数据分析等诸多统计领域。依托辅助的扩展包，R语言可以轻松地从各类数据源获取数据并将其转化为可用的形式，并完成数据的整理、转换、建模、可视化以及结果沟通，分析步骤的结果均可被轻松保存到不同的文件系统中。R语言拥有顶尖水准的制图功能（如[图1](#1-plots)所示），除了自身所带的画图工具外，还有强大的**lattice**包和**ggplot2**包。总而言之，扩展包既是R语言开放性和易拓展性的具体体现，也是R语言卓越功能的动力源泉。
4. 活跃的社区和丰富的资源。作为一款开源软件，R语言背后有一个强大的用户社区和大量的开放资源，获取帮助非常容易。国外比较活跃的R用户社区有[GitHub](https://github.com/)和[Stack Overflow](https://stackoverflow.com/)等，R包的开发者通常会将代码放到Github，接受使用者的问题和建议，等代码成熟后再发布到CRAN上；而Stack Overflow则是一个优质的开发者问答网站，R语言使用过程中出现的许多问题都可以尝试在此找到答案。国内最活跃的R用户社区当属[统计之都](https://cosx.org/)以及统计之都旗下的[COS论坛](https://d.cosx.org/)，这些网站对R语言用户都具有很高的参考价值。此外，[B站](https://www.bilibili.com/)有许多针对初学者的免费的学习视频，而关于R语言学习的英文书籍可以尝试在[bookdown](https://bookdown.org/home/)网站上寻找。
5. [RStudio](https://www.rstudio.com/)。许多用户初次见到标准的R语言界面时都会觉得它太简陋了，并且代码编写的过程并不友好，需要记住大量的命令和函数。RStudio作为R语言的一个好用的集成开发环境（Integrated Development Environment，简称IDE），在编写R代码时，它能够自动填补以及快速显示函数定义，并且能够随时对代码进行调试。此外，RStudio也是免费的并且支持Windows、MacOS和Linux等不同的操作系统。关于RStudio的更多内容请见第1.3节。

> :pushpin:许多R语言大佬习惯将自己编写的书籍免费发布在网上，这给初学者提供了极大的便利。耳熟能详的R技术大牛[Hadley Wickman](http://hadley.nz/)的代表作[*R for Data Science*](https://r4ds.had.co.nz/)、[*ggplot2: Elegant Graphics for Data Analysis*](https://ggplot2-book.org/index.html)和[*Advanced R*](http://adv-r.hadley.nz/) 均可免费在网上阅读，而国内则有北京大学李东风老师的[《R语言教程》](https://www.math.pku.edu.cn/teachers/lidf/docs/Rbook/html/_Rbook/index.html)。

> :loudspeaker:R语言初学者要养成收藏网址的好习惯，无论是关于问题的解答还是有趣的学习资源，把它们及时添加到收藏夹是非常明智的做法。否则当你需要再次寻找这些内容时，可能会比较麻烦。此外，在google搜索引擎无法使用的情况下，推荐使用[bing](https://cn.bing.com/?FORM=BEHPTB)搜索引擎，并且英文搜索的结果通常会比中文结果更加详实丰富。

金无足赤，白璧微瑕。尽管R语言具有众多的优点，但这并不能掩盖其自身存在的劣势。第一，R语言需要通过编写代码的方式来实现相关功能，这对那些不具编程经验和对统计方法掌握得不是很好的初学者是一大挑战，因此其学习曲线是比较陡峭的。第二，尽管R语言及其扩展包的更新是对当前环境的完善补充，但过快的更新有时会造成许多功能和学习资源跟不上版本的更迭，这就要求R用户必须定期更新，如果不更新会出现很多问题。

[^4]: 详情请查看*An Introduction to R*一书：https://cran.r-project.org/doc/manuals/r-release/R-intro.pdf 。

### 1.4 R语言的获取与安装

获取和安装R语言是非常容易的，具体步骤如下：

第一步：打开R语言官方网站（https://www.r-project.org/），点击`download R`；

第二步：在弹出的镜像页面选择合适的镜像入口。截至2021年4月份，中国大陆共有10个镜像入口，你可以选择China下离你最近的一个镜像即可；

第三步：在弹出的下载页面根据自己电脑的操作系统选择安装程序，这里我们选择的是Windows系统；

第四步：在下载页面的子目录下有四类不同的安装文件，点击base版本中的`install R for the first time`进行下载；

第五步：双击下载的R-4.0.5-win.exe，进入安装界面，建议选择默认安装，依次点击`Next >`按钮即可完成。为避免安装出现问题，所有的路径最好都采用英文。

<center>
    <figure>
    <img src="https://wxx-images.oss-cn-hangzhou.aliyuncs.com/picbed-master/image-20210411005715746.png", width="600"/>
    </figure>
    <span id="1-website">第一步：R语言官方网站</span>
</center>


<center>
    <figure>
    <img src="https://wxx-images.oss-cn-hangzhou.aliyuncs.com/picbed-master/image-20210411005350779.png", width="600"/>
    </figure>
    <span id="1-mirrors">第二步：选择合适的镜像入口</span>
</center>


<center>
    <figure>
    <img src="https://wxx-images.oss-cn-hangzhou.aliyuncs.com/picbed-master/image-20210411074240233.png", width="600"/>
    </figure>
    <span id="1-downloados">第三步：根据操作系统选择</span>
</center>


<center>
    <figure>
    <img src="https://wxx-images.oss-cn-hangzhou.aliyuncs.com/picbed-master/image-20210411074354803.png", width="600"/>
    </figure>
    <span id="1-downloadbase">第四步：下载base版本安装文件</span>
</center>


<center>
    <figure>
    <img src="https://wxx-images.oss-cn-hangzhou.aliyuncs.com/picbed-master/image-20210413232757715.png", width="250"/>
    <img src="https://wxx-images.oss-cn-hangzhou.aliyuncs.com/picbed-master/image-20210413234613177.png", width="400"/>
    </figure>
    <span id="1-downloados">第五步：打开exe文件进行默认安装</span>
</center>



安装完成之后，在开始菜单中就会弹出R应用程序的图标，点击该图标，就同时打开了R语言的图形用户界面和控制台，如[图4](#1-rgui)所示。可以看出，它确实十分简陋。不过请放心，我们后续的工作都是在RStudio中展开的，而不是在R应用程序中。

<center>    
    <figure class="half">    
        <img src="https://wxx-images.oss-cn-hangzhou.aliyuncs.com/picbed-master/image-20210410003455675.png" width="750"/>    
    </figure>    
    <span id="1-rgui">图4：Windows 10系统中的R语言界面
    </span>
</center>


> :pushpin:CRAN是Comprehensive R Archive Network的首字母简写形式，是拥有同一资料包括R的发布版本、包、文档和源代码的网络合集。CRAN Mirrors镜像站就是把一个网站资源的副本放在镜像服务器上，也就是说登录不同的镜像网站都跟登录主网站一样。而选择一个离我们近的镜像主要是为了下载的快！当然如果主网站不小心坏掉，镜像网站也是一个很好的后备。

> :pencil:试着在R语言的命令窗口输入以下代码：`print("Hello, world")`，然后按回车键查看结果。恭喜你编写了R语言的第一行命令，后面的学习之旅会更加精彩！